[
  {
    "id": "1743571905875",
    "content": "CDN工作流程：\n![image.png](https://github.com/YCChan2001/tinymind-blog/blob/main/assets/images/2025-04-02/1743571754022.png?raw=true)\n\n\n1.用户A尝试通过图片URL获取image.png。这个URL的域名是由CDN提供商提供，以下两个图像URL是用于演示URL在Amazon和Akamai CDN上的示例：\nhttps://mysite.cloudfront.net/logo.jpg\n\nhttps://mysite.akamai.com/image-manager/img/logo.jpg\n\n2.如果CDN服务器缓存中没有这个图片image.png，CDN服务器会从源（可以是Web服务器或在线存储，如Amazon S3）请求文件。\n\n3.源返回image.png给CDN服务器，并包含可选的HTTP头部Time-to-Live（TTL），它表示图像被缓存的时间有多长。\n\n4.CDN缓存图像并将其返回给用户A。在TTL过期之前，图像一直被缓存在CDN中。\n\n5.用户B发送一个请求获取相同的图片\n\n6.只要TTL尚未过期，图像就会从缓存中返回。",
    "timestamp": "2025-04-02T05:31:45.875Z"
  },
  {
    "id": "1743569513929",
    "content": "一个系统设计：\n![1743569379918.png](https://github.com/YCChan2001/tinymind-blog/blob/main/assets/images/2025-04-02/1743569389933.png?raw=true)\n\n\n1.用户从DNS获取负载均衡器的IP地址\n\n2.用户使用这个IP地址连接到负载均衡器\n\n3.HTTP请求被路由到Server 1或Server 2。\n\n4.Web服务器从从数据库读取用户数据\n\n5.Web服务器将任何修改数据的操作路由到主数据库，这包括写入，更新和删除操作。",
    "timestamp": "2025-04-02T04:51:53.929Z"
  },
  {
    "id": "1743569220672",
    "content": "负载均衡：\n![1743568960512.png](https://github.com/YCChan2001/tinymind-blog/blob/main/assets/images/2025-04-02/1743569010101.png?raw=true)\n用户直接连接负载均衡的公网IP。通过此配置，客户端不再直接访问web服务器，为了提高安全性，服务器之间的通信使用私有IP。私有IP是仅在同一网络中的服务器之间可达的IP地址。然而，它在互联网上是不可访问的。负载均衡器通过私有IP与Web服务器通信。\n\n\n\n.1如果服务器1下线，所有流量将被路由到服务器2。这可以防止网站离线，我们还将在服务器池中添加一个新的健康Web服务器来平衡负载。\n\n.2如果网站流量迅速增长，并且两台服务器不足以处理流量，那么负载均衡可以很好的处理这个问题，你只需要向web服务器池中添加更多的服务器，负载均衡会自动发送请求给他们。",
    "timestamp": "2025-04-02T04:47:00.672Z"
  },
  {
    "id": "1743568575436",
    "content": "单服务器：\n![1743566066896.png](https://github.com/YCChan2001/tinymind-blog/blob/main/assets/images/2025-04-02/1743566138644.png?raw=true)\n1.用户通过域名访问网站，例如api.mysite.com。通常，域名系统（DNS）是由第三方提供的付费服务，而不是由我们的服务器托管。\n\n2.Internet Protocol（IP）地址被返回给浏览器或移动应用程序。在这个例子中，返回的IP地址是15.125.23.214。\n\n3.一旦获得了IP地址，就会直接向您的Web服务器发送超文本传输协议（HTTP）[1]请求。\n\n4.Web服务器返回用于渲染的HTML页面或JSON响应。",
    "timestamp": "2025-04-02T04:36:15.436Z"
  }
]